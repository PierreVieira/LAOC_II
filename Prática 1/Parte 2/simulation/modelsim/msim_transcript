# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do memoria_ram_run_msim_rtl_verilog.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vlog -vlog01compat -work work +incdir+C:/Users/Aluno/Documents/Pratica1.2\ -\ Pierre_Eduardo {C:/Users/Aluno/Documents/Pratica1.2 - Pierre_Eduardo/DecodDisplay.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module DecodDisplay
# 
# Top level modules:
# 	DecodDisplay
# vlog -vlog01compat -work work +incdir+C:/Users/Aluno/Documents/Pratica1.2\ -\ Pierre_Eduardo {C:/Users/Aluno/Documents/Pratica1.2 - Pierre_Eduardo/main.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module main
# 
# Top level modules:
# 	main
# vlog -vlog01compat -work work +incdir+C:/Users/Aluno/Documents/Pratica1.2\ -\ Pierre_Eduardo {C:/Users/Aluno/Documents/Pratica1.2 - Pierre_Eduardo/memoria_ram.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module memoria_ram
# 
# Top level modules:
# 	memoria_ram
# 
vsim +altera -L altera_mf_ver -do memoria_ram_run_msim_rtl_verilog.do -l msim_transcript -gui work.memoria_ram
# vsim +altera -L altera_mf_ver -do memoria_ram_run_msim_rtl_verilog.do -l msim_transcript -gui work.memoria_ram 
# Loading work.memoria_ram
# Loading altera_mf_ver.altsyncram
# Loading altera_mf_ver.ALTERA_DEVICE_FAMILIES
# Loading altera_mf_ver.ALTERA_MF_MEMORY_INITIALIZATION
# do memoria_ram_run_msim_rtl_verilog.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Modifying modelsim.ini
# 
# vlog -vlog01compat -work work +incdir+C:/Users/Aluno/Documents/Pratica1.2\ -\ Pierre_Eduardo {C:/Users/Aluno/Documents/Pratica1.2 - Pierre_Eduardo/DecodDisplay.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module DecodDisplay
# 
# Top level modules:
# 	DecodDisplay
# vlog -vlog01compat -work work +incdir+C:/Users/Aluno/Documents/Pratica1.2\ -\ Pierre_Eduardo {C:/Users/Aluno/Documents/Pratica1.2 - Pierre_Eduardo/main.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module main
# 
# Top level modules:
# 	main
# vlog -vlog01compat -work work +incdir+C:/Users/Aluno/Documents/Pratica1.2\ -\ Pierre_Eduardo {C:/Users/Aluno/Documents/Pratica1.2 - Pierre_Eduardo/memoria_ram.v}
# Model Technology ModelSim ALTERA vlog 10.1d Compiler 2012.11 Nov  2 2012
# -- Compiling module memoria_ram
# 
# Top level modules:
# 	memoria_ram
# 
wave create -driver freeze -pattern clock -initialvalue HiZ -period 100ps -dutycycle 50 -starttime 0ps -endtime 1000ps sim:/memoria_ram/clock
wave create -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 50ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 1000ps sim:/memoria_ram/address
wave create -driver freeze -pattern random -initialvalue zzzzzzzz -period 50ps -random_type Uniform -seed 5 -range 7 0 -starttime 0ps -endtime 1000ps sim:/memoria_ram/data
wave create -driver freeze -pattern constant -value 0 -starttime 0ps -endtime 1000ps sim:/memoria_ram/wren
add wave -position insertpoint  \
sim:/memoria_ram/q
run -all
wave modify -driver freeze -pattern clock -initialvalue (no value) -period 250ps -dutycycle 50 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/wren
restart
# Loading work.memoria_ram
run
wave modify -driver freeze -pattern clock -initialvalue 0 -period 250ps -dutycycle 50 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/wren
run
restart
run
wave modify -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 200ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/address
restart
run
wave modify -driver freeze -pattern counter -startvalue 00000000 -endvalue 11111111 -type Range -direction Up -period 250ps -step 1 -repeat forever -range 7 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/data
run
run
# 
# Internal Error: In tclprim_ApplyStimulus for /memoria_ram/clock "Time value must be greater than "now": 1000 ps
# ** Error: (vsim-4004) The -cancel option requires a time period argument.
# Usage: force [-deposit | -drive | -freeze] [-cancel <period>] [-repeat <period>] <item_name> <value> [<time>] [, <value> <time> ...]"
# Internal Error: In tclprim_ApplyStimulus for /memoria_ram/address ""
# Internal Error: In tclprim_ApplyStimulus for /memoria_ram/data ""
# Internal Error: In tclprim_ApplyStimulus for /memoria_ram/wren "Time value must be greater than "now": 1000 ps
# ** Error: (vsim-4004) The -cancel option requires a time period argument.
# Usage: force [-deposit | -drive | -freeze] [-cancel <period>] [-repeat <period>] <item_name> <value> [<time>] [, <value> <time> ...]"
restart
run
wave modify -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 400ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/address
restart
run
run
restart
run
run -all
wave modify -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 400ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 2000ps Edit:/memoria_ram/address
wave modify -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 400ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/address
restart
wave create -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 400ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 1000ps sim:/memoria_ram/address
add wave -position 1 -autoscale 1 -format Literal -height 17 -editable 2 Edit:/memoria_ram/address
restart
run
wave modify -driver freeze -pattern clock -initialvalue St0 -period 500ps -dutycycle 50 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/wren
wave modify -driver freeze -pattern constant -value 0 -range 7 0 -starttime 0ps -endtime 500ps Edit:/memoria_ram/data
wave modify -driver freeze -pattern constant -value 1 -range 7 0 -starttime 500ps -endtime 1000ps Edit:/memoria_ram/data
wave modify -driver freeze -pattern counter -startvalue 00000000 -endvalue 11111111 -type Range -direction Up -period 400ps -step 1 -repeat forever -range 7 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/data
wave modify -driver freeze -pattern counter -startvalue 00000000 -endvalue 11111111 -type Range -direction Up -period 200ps -step 1 -repeat forever -range 7 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/data
wave modify -driver freeze -pattern constant -value 0 -starttime 0ps -endtime 500ps Edit:/memoria_ram/wren
wave modify -driver freeze -pattern constant -value 1 -starttime 500ps -endtime 1000ps Edit:/memoria_ram/wren
restart
run
wave modify -driver freeze -pattern random -initialvalue (no value) -period 50ps -random_type Uniform -seed 5 -range 7 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/data
# Invalid binary digit: (.
#Invalid value to -initialvalue switch: (no
# 
wave modify -driver freeze -pattern random -initialvalue 00000000 -period 50ps -random_type Uniform -seed 5 -range 7 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/data
restart
run -all
wave modify -driver freeze -pattern counter -startvalue 00000 -endvalue 11111 -type Range -direction Up -period 75ps -step 1 -repeat forever -range 4 0 -starttime 0ps -endtime 1000ps Edit:/memoria_ram/address
restart
run -all
wave editwrite -file C:/Users/Aluno/Pictures/wave.do
